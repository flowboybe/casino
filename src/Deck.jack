class Deck{
    field Array cards;
    field int peek;

    constructor Deck new(){
        var int counter;

        let cards = Array.new(36);
        let peek = 36;
        
        while (counter < 36){
            let cards[counter] = counter + 1;
            let counter = counter + 1;
        }
        return this;
    }

    method void shuffle(){
        var Array tempArray;
        var int counter;
        var Random randomaizer;
        var int pos;

        while (counter < 36){
            let tempArray[counter] = counter + 1;
            let counter = counter + 1;
        }

        let randomaizer = Random.new(Main.getSeed());
        let counter = 0;

        while (counter < 36){
            let pos = randomaizer.nextInt(36);
            while (tempArray[pos] = 0){
                let pos = randomaizer.nextInt(36);
            }
            let cards[counter] = tempArray[pos];
            let tempArray[pos] = 0;
            let counter = counter + 1;
        }
        
        do tempArray.dispose();
        do randomaizer.dispose();

        return;
    }

    method Card takeCard(){
        let peek = peek - 1;
        return Card.new(cards[peek] - 1 - (cards[peek] - 1 / 9 * 9), cards[peek] - 1 / 9);
    }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }
}