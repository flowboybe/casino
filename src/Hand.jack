class Hand{
    field Array cards;
    field int points;
    field int length;
    field int nominals;
    field bool isDealersHand;

    constructor Hand new(bool isDealer){
        let cards = Array.new(6);
        let isDealersHand = isDealer;
        return this;
    }

    method void addCard(Card card){
        let cards[length] = (card.getColour() * 10) + card.getPoints();
        let length = length + 1;
        let nominals = nominals + card.getNominalo();
        do card.dispose();
        return;
    }

    method void showCards(int x, int y){
        var int iterator;
        var Card currentCard;

        let iterator = 0;
        while (iterator < length){
            let currentCard = Card.new(cards[iterator] - (cards[iterator] / 10 * 10), cards[iterator] / 10);
            do currentCard.openCard();
            if ((iterator > 0) & isDealersHand){
                do currentCard.closeCard();
            }
            do currentCard.undrawCard(x + (iterator * 34), y);
            do currentCard.drawCard(x + (iterator * 34), y);
            let iterator = iterator + 1;
        } 

        do currentCard.dispose();
        return;
    }

    method int getNominals(){
        return nominals;
    }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }
}