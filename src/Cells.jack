class Cells {
    static int rand1;
    static int rand2;
    static int rand3;
    static int seedCells1;
    static int seedCells2;
    static int seedCells3;

    // ячейки начинают изменяться
    function void ActivateCells(int seed1, int seed2, int seed3) {

        var int iterations, coins, bid;
        let iterations = 0;
        
        let coins = Main.getCoins();
        let bid = Bandit.getCurrentBid();

        while (iterations < 20) {
            do Cells.cleanCells();
            do Cells.changeCell(seed1, 1);
            do Cells.changeCell(seed2, 2);
            do Cells.changeCell(seed3, 3);
            let seed1 = seedCells1;
            let seed2 = seedCells2;
            let seed3 = seedCells3;

            do Sys.wait(200);
            
            let iterations = iterations + 1;
        }

        if (rand1 = rand2 & rand1 = rand3 & rand2 = rand3) {
            do Main.setCoins(coins + (bid * 5));
            do Main.updateCoins();
            return;
        }

        if (rand1 = 2 & rand2 = 2) {
            do Main.setCoins(coins + (bid * 2));
            do Main.updateCoins();
            return;
        }

        if (rand1 = 2 & rand3 = 2) {
            do Main.setCoins(coins + (bid * 2));
            do Main.updateCoins();
            return;
        }

        if (rand2 = 2 & rand3 = 2) {
            do Main.setCoins(coins + (bid * 2));
            do Main.updateCoins();
            return;
        }

        if (rand1 = 3 & rand2 = 3) {
            do Main.setCoins(coins + bid);
            do Main.updateCoins();
            return;
        }

        if (rand1 = 3 & rand3 = 3) {
            do Main.setCoins(coins + bid);
            do Main.updateCoins();
            return;
        }

        if (rand2 = 3 & rand3 = 3) {
            do Main.setCoins(coins + bid);
            do Main.updateCoins();
            return;
        }

        do Main.setCoins(coins - bid);
        do Main.updateCoins();

        if (Main.getCoins() < 50) {
            let bid = Main.getCoins();
            do Output.moveCursor(5, 60);
            do Output.printString("   ");
            do Output.moveCursor(5, 60);
            do Output.printInt(bid);
        }

        return;
    }

    // изменение одной из ячеек
    function void changeCell(int seed, int cellNumber) {
        var CellsImages cellImage;
        var int randomNumber, coordinate;
        var Random randomizer;

        if (cellNumber = 1) {
            let seed = seed + 3;
            if (seed > 1000) {
                let seed = 3;
            }
            let seedCells1 = seed;
        }
        if (cellNumber = 2) {
            let seed = seed + 9;
            if (seed > 1000) {
                let seed = 4;
            }
            let seedCells2 = seed;
        }
        if (cellNumber = 3) {
            let seed = seed + 5;
            if (seed > 1000) {
                let seed = 5;
            }
            let seedCells3 = seed;
        }

        let randomizer = Random.new(seed);  
        let randomNumber = randomizer.nextInt(6);
        if (cellNumber = 1) {
            let rand1 = randomNumber + 1;
            let coordinate = 50;
        }
        if (cellNumber = 2) {
            let rand2 = randomNumber + 1;
            let coordinate = 166;
        }
        if (cellNumber = 3) {
            let rand3 = randomNumber + 1;
            let coordinate = 283;
        }
        



        if (randomNumber = 0) {
            do cellImage.drawFiit(coordinate, 70);
            return;
        }

        if (randomNumber = 1) {
            do cellImage.drawIntegral(coordinate, 70);
            return;
        }

        if (randomNumber = 2) {
            do cellImage.drawPi(coordinate, 70);
            return;
        }

        if (randomNumber = 3) {
            do cellImage.drawSeven(coordinate, 70);
            return;
        }

        if (randomNumber = 4) {
            do cellImage.drawTetrisShape(coordinate, 70, 0);
            return;
        }

        if (randomNumber = 5) {
            do cellImage.drawTetrisShape(coordinate, 70, 1);
            return;
        }
        do randomizer.dispose();
        do cellImage.dispose();

        return;
    }

    function void cleanCells() {
        var int x, y, width, height;

        let x = 50;
        let y = 70;
        let width = 109;
        let height = 110;

        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + width, y + height); 


        let x = 166;
        let width = 108;

        do Screen.drawRectangle(x, y, x + width, y + height);


        let x = 281;
        let width = 107;

        do Screen.drawRectangle(x, y, x + width, y + height);

        do Screen.setColor(true);

        return;
    }
}