function CellsImages.drawIntegral 4
push argument 0
pop pointer 0
push argument 1
pop local 2
push argument 2
pop local 3
push argument 1
push constant 55
add
pop argument 1
push argument 2
push constant 20
add
pop argument 2
push constant 8
pop local 0
push constant 60
pop local 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 3
add
pop argument 1
push argument 2
push constant 4
sub
pop argument 2
push constant 13
pop local 0
push constant 6
pop local 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 10
add
pop argument 1
push argument 2
push constant 2
add
pop argument 2
push constant 5
pop local 0
push constant 6
pop local 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push local 2
push constant 48
add
pop argument 1
push local 3
push constant 80
add
pop argument 2
push constant 13
pop local 0
push constant 6
pop local 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 3
sub
pop argument 1
push argument 2
push constant 3
sub
pop argument 2
push constant 5
pop local 0
push constant 6
pop local 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function CellsImages.drawPi 2
push argument 0
pop pointer 0
push argument 1
push constant 30
add
pop argument 1
push argument 2
push constant 30
add
pop argument 2
push constant 51
pop local 0
push constant 8
pop local 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 9
add
pop argument 1
push argument 2
push constant 8
add
pop argument 2
push constant 8
pop local 0
push constant 50
pop local 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 26
add
pop argument 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function CellsImages.drawFiit 5
push argument 0
pop pointer 0
push argument 1
pop local 3
push argument 2
pop local 4
push argument 1
push constant 25
add
pop argument 1
push argument 2
push constant 40
add
pop argument 2
push constant 60
pop local 0
push constant 10
pop local 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 5
sub
pop argument 1
push argument 2
push constant 5
add
pop argument 2
push constant 10
pop local 0
push constant 35
pop local 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 60
add
pop argument 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 55
sub
pop argument 1
push argument 2
push constant 33
add
pop argument 2
push constant 10
pop local 0
push constant 6
pop local 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push constant 5
pop local 0
push constant 8
pop local 1
label WHILE_EXP0
push local 2
push constant 5
lt
not
if-goto WHILE_END0
push argument 1
push constant 5
add
pop argument 1
push argument 2
push constant 1
sub
pop argument 2
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push argument 2
push constant 7
add
pop argument 2
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push constant 5
lt
not
if-goto WHILE_END1
push argument 1
push constant 5
add
pop argument 1
push argument 2
push constant 1
sub
pop argument 2
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push constant 10
pop local 0
push constant 7
pop local 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push local 3
push constant 22
add
pop argument 1
push local 4
push constant 42
add
pop argument 2
push constant 3
pop local 0
push constant 3
pop local 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 63
add
pop argument 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 63
sub
pop argument 1
push argument 2
push constant 38
add
pop argument 2
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 8
add
pop argument 1
push argument 2
push constant 30
sub
pop argument 2
push constant 2
pop local 0
push constant 2
pop local 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 47
add
pop argument 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function CellsImages.drawSeven 5
push argument 0
pop pointer 0
push argument 1
pop local 3
push argument 2
pop local 4
push argument 1
push constant 30
add
pop argument 1
push argument 2
push constant 30
add
pop argument 2
push constant 50
pop local 0
push constant 8
pop local 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 43
add
pop argument 1
push argument 2
push constant 8
add
pop argument 2
push constant 7
pop local 0
push constant 6
pop local 1
label WHILE_EXP0
push local 2
push constant 25
lt
not
if-goto WHILE_END0
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 1
sub
pop argument 1
push argument 2
push constant 2
add
pop argument 2
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push local 3
push constant 80
add
pop argument 1
push local 4
push constant 31
add
pop argument 2
push constant 2
pop local 0
push constant 11
pop local 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function CellsImages.drawTetrisShape 2
push argument 0
pop pointer 0
push argument 1
push constant 37
add
pop argument 1
push argument 2
push constant 55
add
pop argument 2
push constant 30
pop local 0
push constant 30
pop local 1
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 2
add
pop argument 1
push argument 2
push constant 2
add
pop argument 2
push local 0
push constant 4
sub
pop local 0
push local 1
push constant 4
sub
pop local 1
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 32
sub
pop argument 1
push argument 2
push constant 2
sub
pop argument 2
push constant 30
pop local 0
push constant 30
pop local 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 2
add
pop argument 1
push argument 2
push constant 2
add
pop argument 2
push local 0
push constant 3
sub
pop local 0
push local 1
push constant 4
sub
pop local 1
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 28
add
pop argument 1
push argument 2
push constant 32
sub
pop argument 2
push constant 30
pop local 0
push constant 30
pop local 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 2
add
pop argument 1
push argument 2
push constant 2
add
pop argument 2
push local 0
push constant 4
sub
pop local 0
push local 1
push constant 3
sub
pop local 1
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 3
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push constant 27
add
pop argument 1
push argument 2
push constant 28
add
pop argument 2
push constant 30
pop local 0
push constant 30
pop local 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 2
add
pop argument 1
push argument 2
push constant 2
add
pop argument 2
push local 0
push constant 4
sub
pop local 0
push local 1
push constant 4
sub
pop local 1
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push argument 3
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push constant 27
add
pop argument 1
push argument 2
push constant 2
sub
pop argument 2
push constant 30
pop local 0
push constant 31
pop local 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 2
add
pop argument 1
push argument 2
push constant 2
add
pop argument 2
push local 0
push constant 4
sub
pop local 0
push local 1
push constant 4
sub
pop local 1
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push argument 1
push local 0
add
push argument 2
push local 1
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE1
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
function CellsImages.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
